{"version":3,"sources":["сomponents/Menu/Menu.module.css","сomponents/Counter/Counter.module.css","сomponents/FullName/FullName.module.css","сomponents/Counter/CounterInput/CounterInput.module.css","сomponents/Qualities/Qualities.module.css","сomponents/Qualities/Quality/Quality.module.css","сomponents/Counter/CounterButton/CounterButton.module.css","сomponents/Counter/InputName/InputName.module.css","сomponents/DialogItem/Message/Time/Time.jsx","сomponents/DialogItem/Message/Message.jsx","сomponents/DialogItem/Name/Name.jsx","сomponents/DialogItem/Avatar/Avatar.jsx","сomponents/DialogItem/DialogItem.jsx","сomponents/FullName/FullName.jsx","сomponents/Qualities/Quality/Quality.jsx","сomponents/Qualities/Qualities.jsx","сomponents/Counter/CounterButton/CounterButton.jsx","сomponents/Counter/CounterInput/CounterInput.jsx","сomponents/Counter/InputName/InputName.jsx","сomponents/Counter/Counter.jsx","сomponents/Menu/Menu.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","dateWithouthSecond","Date","Time","render","toLocaleTimeString","hour","minute","React","Component","Message","Name","Avatar","src","alt","DialogItem","className","FullName","style","wrapper","title","Quality","props","theme","quality","Qualities","qualities","map","i","key","id","toUpperCase","substring","CounterButton","handleClick","increment","addName","onClick","this","counterButton","CounterInput","name","state","addInputName","alert","setState","errorClass","handleNameChange","event","target","value","handleEnter","classError","error","mainInput","onKeyPress","onChange","type","placeholder","required","InputName","nameItem","list","n","index","listNames","Counter","mainCounter","mainCounterNumber","date","counter","logic","inputListName","Menu","outerMenu","checkboxToggle","hamburger","menu","activeClassName","activeMenu","to","App","incrementCounter","prevState","listName","path","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,WAAa,yBAAyB,cAAc,0BAA0B,UAAY,wBAAwB,eAAiB,6BAA6B,UAAY,wBAAwB,KAAO,qB,oBCA7ND,EAAOC,QAAU,CAAC,YAAc,6BAA6B,kBAAoB,mCAAmC,cAAgB,iC,iBCApID,EAAOC,QAAU,CAAC,UAAY,4BAA4B,QAAU,0BAA0B,MAAQ,wBAAwB,eAAe,+BAA+B,iBAAiB,mC,gBCA7LD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,MAAQ,8B,qBCAtED,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,UAAY,6B,gBCA9BD,EAAOC,QAAU,CAAC,cAAgB,uC,gBCAlCD,EAAOC,QAAU,CAAC,UAAY,+B,wNCC1BC,G,YAAqB,IAAIC,MAWdC,E,4MAPXC,OAAS,WACL,OACIH,EAAmBI,mBAAmB,GAAI,CAACC,KAAM,UAAWC,OAAO,a,YAJ5DC,IAAMC,WCaVC,EAbC,WACZ,OACI,wPAII,8BACI,kBAAC,EAAD,SCHDC,EANF,WACT,OACI,gDCGOC,EALA,WACX,OACI,yBAAKC,IAAI,kFAAkFC,IAAI,MCwBxFC,E,4MApBXX,OAAS,WACL,OACI,yBAAKY,UAAU,oBACX,yBAAKA,UAAU,UACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,SACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,cACX,kBAAC,EAAD,U,YAbCR,IAAMC,W,iBCShBQ,E,4MAVXb,OAAS,WAEL,OACI,yBAAKY,UAAWE,IAAMC,SAClB,wBAAIH,UAAWE,IAAME,OAArB,4I,YALOZ,IAAMC,W,kCCOdY,EARC,SAACC,GACb,IAAIC,EAA0B,2DAAlBD,EAAME,QAA0B,YAAc,GAC1D,OACI,0BAAMR,UAAWE,IAAMK,IAASD,EAAME,QAAtC,SCSOC,EAVG,SAACH,GACf,IAAIE,EAAUF,EAAMI,UAAUC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAASC,IAAKD,EAAEE,GACnCN,QAAWI,EAAEJ,QAAQ,GAAGO,cAAgBH,EAAEJ,QAAQQ,UAAU,QAEhF,OACI,yBAAKhB,UAAWE,IAAMQ,WACbF,I,mDCWFS,E,4MAfXC,YAAc,WACV,EAAKZ,MAAMa,YACX,EAAKb,MAAMc,W,uDAIX,OACI,4BAAQC,QAASC,KAAKJ,YAAalB,UAAWE,IAAMqB,eAApD,4C,GATgB/B,IAAMC,WCuDnB+B,E,kDArDX,WAAYlB,GAAQ,IAAD,8BACf,cAAMA,IAOVc,QAAU,WAAO,IACLK,EAAS,EAAKC,MAAdD,KACHA,GACD,EAAKnB,MAAMqB,aAAaF,GACxBG,MAAM,wCAAWH,GACjB,EAAKI,SAAS,CAAEJ,KAAM,MAEtB,EAAKI,SAAS,CAAEC,WAAY,WAfjB,EAmBnBC,iBAAmB,SAACC,GAChB,EAAKH,SAAS,CAACJ,KAAMO,EAAMC,OAAOC,QAClC,EAAKL,SAAS,CAAEC,WAAY,OArBb,EAwBnBK,YAAc,SAACH,GACO,UAAdA,EAAMnB,KACN,EAAKO,WAxBT,EAAKM,MAAQ,CACTD,KAAM,GACNK,WAAY,IAJD,E,qDA8BT,IACEL,EAASH,KAAKI,MAAdD,KACJW,EAAuC,UAA1Bd,KAAKI,MAAMI,WAAyB5B,IAAMmC,MAAO,GAClE,OACI,yBAAKrC,UAAWE,IAAMoC,UAAW,IAAMF,GACnC,2BACIG,WAAYjB,KAAKa,YACjBK,SAAUlB,KAAKS,iBACfG,MAAOT,EACPgB,KAAK,OACLC,YAAY,yFACZC,SAAS,aAEb,kBAAC,EAAD,CACIxB,UAAWG,KAAKhB,MAAMa,UACtBC,QAASE,KAAKF,e,GA/CP5B,IAAMC,W,iBCclBmD,E,uKAbP,IAAIC,EAAWvB,KAAKhB,MAAMwC,KAAKnC,KAAI,SAACoC,EAAGC,GAAJ,OAAa,wBAAInC,IAAKmC,GAAQD,EAAEtB,SACnE,OACI,yBAAKzB,UAAWE,IAAM+C,WAClB,sHACA,4BACKJ,Q,GAPGrD,IAAMC,WCuBfyD,E,uKAnBP,OACI,yBAAKlD,UAAWE,IAAMiD,aAClB,yBAAKnD,UAAWE,IAAMkD,mBAClB,kMACmC9B,KAAKhB,MAAM+C,KAAKC,UAGnD,kBAAC,EAAD,CACInC,UAAWG,KAAKhB,MAAMiD,MACtB5B,aAAcL,KAAKhB,MAAMqB,eAEjC,yBAAK3B,UAAWE,IAAMsD,eAClB,kBAAC,EAAD,CAAWV,KAAMxB,KAAKhB,MAAMwC,a,GAd1BtD,IAAMC,W,gCCwBbgE,EAzBF,WACT,OACI,yBAAKzD,UAAWE,IAAMwD,WAClB,2BAAO1D,UAAWE,IAAMyD,eAAgBlB,KAAK,aAC7C,yBAAKzC,UAAWE,IAAM0D,WAClB,+BAEJ,yBAAK5D,UAAWE,IAAM2D,MAClB,6BACI,6BACI,4BACI,kGACA,4BAAI,kBAAC,IAAD,CAASC,gBAAiB5D,IAAM6D,WAAYC,GAAG,YAA/C,4DACJ,4BAAI,kBAAC,IAAD,CAASF,gBAAiB5D,IAAM6D,WAAYC,GAAG,WAA/C,gGACJ,4BAAI,kBAAC,IAAD,CAASF,gBAAiB5D,IAAM6D,WAAYC,GAAG,cAA/C,qDACJ,4BAAI,kBAAC,IAAD,CAASF,gBAAiB5D,IAAM6D,WAAYC,GAAG,aAA/C,yBACJ,gFCoDbC,E,4MA7DXvC,MAAQ,CACJuB,UAAW,CACP,CAACxB,KAAM,MAEX6B,QAAS,G,EAGbY,iBAAmB,kBAAM,EAAKrC,UAAS,SAACsC,GAAD,MAAgB,CAACb,QAASa,EAAUb,QAAU,O,EAErF3B,aAAe,SAACF,GACZ,IAAI2C,EAAQ,sBAAO,EAAK1C,MAAMuB,WAAlB,CAA6B,CAACxB,KAAMA,KAChD,EAAKI,SAAS,CAACoB,UAAWmB,K,uDAGpB,IAAD,OAED1D,EAAY,CACZ,CAACF,QAAS,qEAAeM,GAAI,EAAGd,UAAW,IAC3C,CAACQ,QAAS,yDAAaM,GAAI,EAAGd,UAAW,aACzC,CAACQ,QAAS,yDAAaM,GAAI,EAAGd,UAAW,KAG7C,OACI,yBAAKA,UAAU,OACX,kBAAC,IAAD,CAAOqE,KAAK,WAAWjF,OAAQ,kBAAM,kBAAC,EAAD,CACjCuC,aAAc,EAAKA,aACnB0B,KAAM,EAAK3B,MACX6B,MAAO,EAAKW,iBACZpB,KAAM,EAAKpB,MAAMuB,eAErB,kBAAC,IAAD,CAAOoB,KAAK,YAAYC,UAAWrE,IACnC,kBAAC,IAAD,CAAOoE,KAAK,aAAajF,OAAQ,kBAAM,kBAAC,EAAD,CAAWsB,UAAWA,OAC7D,kBAAC,IAAD,CAAO2D,KAAK,UAAUC,UAAWvE,IAEjC,kBAAC,EAAD,W,GApCEP,IAAMC,WCEJ8E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASxF,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEJyF,SAASC,eAAe,SDwHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhD,GACLiD,QAAQjD,MAAMA,EAAMkD,c","file":"static/js/main.56a8e167.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeMenu\":\"Menu_activeMenu__d4xXG\",\"flex-center\":\"Menu_flex-center__3acYu\",\"outerMenu\":\"Menu_outerMenu__3tyyG\",\"checkboxToggle\":\"Menu_checkboxToggle__3US85\",\"hamburger\":\"Menu_hamburger__1oLH6\",\"menu\":\"Menu_menu__3BHGg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainCounter\":\"Counter_mainCounter__29E2P\",\"mainCounterNumber\":\"Counter_mainCounterNumber__1aY93\",\"inputListName\":\"Counter_inputListName__1V3d_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"qualities\":\"FullName_qualities__2i7xF\",\"wrapper\":\"FullName_wrapper__2jeZG\",\"title\":\"FullName_title__3xcuz\",\"printed-text\":\"FullName_printed-text__1tQPS\",\"flashin-border\":\"FullName_flashin-border__3uL-w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainInput\":\"CounterInput_mainInput__3p-Bz\",\"error\":\"CounterInput_error__1LS4e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"qualities\":\"Qualities_qualities__XFXtU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"beautiful\":\"Quality_beautiful__3oo6C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counterButton\":\"CounterButton_counterButton__KYwtU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listNames\":\"InputName_listNames__McLBD\"};","import React from \"react\";\r\n\r\nlet dateWithouthSecond = new Date();\r\n\r\nclass Time extends React.Component {\r\n\r\n    render = () => {\r\n        return (\r\n            dateWithouthSecond.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\r\n        );\r\n    }\r\n}\r\n\r\nexport default Time;","import React from \"react\";\r\nimport Time from \"./Time/Time\";\r\n\r\n\r\nconst Message = () => {\r\n    return (\r\n        <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Animi commodi dolore, dolores eos expedita hic\r\n            inventore labore molestias odio porro quis quisquam quod, reprehenderit ut voluptatem.\r\n            Amet eum velit voluptatem.\r\n            <span>\r\n                <Time />\r\n            </span>\r\n        </p>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\n\r\nconst Name = () => {\r\n    return (\r\n        <p>Sergey Neplashov</p>\r\n    );\r\n}\r\n\r\nexport default Name;","import React from \"react\";\r\n\r\nconst Avatar = () => {\r\n    return (\r\n        <img src=\"https://cdn.dribbble.com/users/924650/screenshots/6606195/robohobo_detailed.png\" alt=\"\"/>\r\n    );\r\n}\r\nexport default Avatar;","import React from \"react\";\r\nimport './DialogItem.css';\r\nimport Message from \"./Message/Message\";\r\nimport Name from \"./Name/Name\";\r\nimport Avatar from \"./Avatar/Avatar\";\r\n\r\nclass DialogItem extends React.Component {\r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"telegram_message\">\r\n                <div className=\"avatar\">\r\n                    <Avatar/>\r\n                </div>\r\n                <div className=\"cloud\">\r\n                    <div className=\"cloud_name\">\r\n                        <Name/>\r\n                    </div>\r\n                    <div className=\"cloud_text\">\r\n                        <Message/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from './FullName.module.css'\r\n\r\n\r\nclass FullName extends React.Component {\r\n    render = () => {\r\n\r\n        return (\r\n            <div className={style.wrapper}>\r\n                <h1 className={style.title}>Неплашов Сергей Иванович</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FullName;","import React from \"react\";\r\nimport style from './Quality.module.css'\r\n\r\nconst Quality = (props) => {\r\n    let theme = props.quality === \"Комуннист\" ? \"beautiful\" : \"\";\r\n    return (\r\n        <span className={style[theme]}>{props.quality}&nbsp;</span>\r\n        // <span className={style[props.theme]}>{props.quality}</span>\r\n    );\r\n}\r\n\r\nexport default Quality;","import React from \"react\";\r\nimport style from './Qualities.module.css'\r\nimport Quality from \"./Quality/Quality\";\r\n\r\n\r\nconst Qualities = (props) => {\r\n    let quality = props.qualities.map(i => <Quality key={i.id}\r\n                        quality = {i.quality[0].toUpperCase() + i.quality.substring(1)} /> );\r\n\r\n    return (\r\n        <div className={style.qualities}>\r\n                {quality}\r\n        </div>\r\n    );\r\n}\r\nexport default Qualities;\r\n","import React from \"react\";\r\nimport style from './CounterButton.module.css'\r\n\r\n\r\n\r\nclass CounterButton extends React.Component{\r\n\r\n    handleClick = () => {\r\n        this.props.increment();\r\n        this.props.addName();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <button onClick={this.handleClick} className={style.counterButton} >\r\n                Кнопка\r\n            </button>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CounterButton;","import React from \"react\";\r\nimport style from './CounterInput.module.css'\r\nimport CounterButton from \"../CounterButton/CounterButton\";\r\n\r\n\r\nclass CounterInput extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            errorClass: \"\"\r\n        }\r\n    }\r\n\r\n    addName = () => {\r\n        const { name } = this.state;\r\n        if ( name ) {\r\n            this.props.addInputName(name);\r\n            alert(\"Привет \"+ name);\r\n            this.setState({ name: '' });\r\n        } else {\r\n            this.setState({ errorClass: \"error\"})\r\n        }\r\n    };\r\n\r\n    handleNameChange = (event) => {\r\n        this.setState({name: event.target.value});\r\n        this.setState({ errorClass: \" \"});\r\n    };\r\n\r\n    handleEnter = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            this.addName();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { name } = this.state;\r\n        let classError = this.state.errorClass === \"error\" ? style.error: \"\";\r\n        return (\r\n            <div className={style.mainInput+ \" \" + classError }>\r\n                <input\r\n                    onKeyPress={this.handleEnter}\r\n                    onChange={this.handleNameChange}\r\n                    value={name}\r\n                    type=\"text\"\r\n                    placeholder=\"Введите Ваше имя\"\r\n                    required=\"required\"\r\n                />\r\n                <CounterButton\r\n                    increment={this.props.increment}\r\n                    addName={this.addName}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CounterInput;","import React from \"react\";\r\nimport style from './InputName.module.css'\r\n\r\n\r\nclass InputName extends React.Component {\r\n    render() {\r\n        let nameItem = this.props.list.map((n, index) =><li key={index}>{n.name}</li>);\r\n        return (\r\n            <div className={style.listNames}>\r\n                <h1>Введенные имена:</h1>\r\n                <ul>\r\n                    {nameItem}\r\n                </ul>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputName;","import React from \"react\";\r\nimport style from './Counter.module.css'\r\nimport CounterInput from \"./CounterInput/CounterInput\";\r\nimport InputName from \"./InputName/InputName\";\r\n\r\n\r\nclass Counter extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={style.mainCounter}>\r\n                <div className={style.mainCounterNumber}>\r\n                    <span>\r\n                       Колличество нажатий на кнопку: {this.props.date.counter}\r\n                    </span>\r\n                </div>\r\n                    <CounterInput\r\n                        increment={this.props.logic}\r\n                        addInputName={this.props.addInputName}\r\n                    />\r\n                <div className={style.inputListName}>\r\n                    <InputName list={this.props.list}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;","import React from \"react\";\r\nimport style from './Menu.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <div className={style.outerMenu}>\r\n            <input className={style.checkboxToggle} type=\"checkbox\"/>\r\n            <div className={style.hamburger}>\r\n                <div></div>\r\n            </div>\r\n            <div className={style.menu}>\r\n                <div>\r\n                    <div>\r\n                        <ul>\r\n                            <li>Понедельник</li>\r\n                            <li><NavLink activeClassName={style.activeMenu} to=\"/counter\">Поле ввода</NavLink></li>\r\n                            <li><NavLink activeClassName={style.activeMenu} to=\"/dialog\">Облако сообщения</NavLink></li>\r\n                            <li><NavLink activeClassName={style.activeMenu} to=\"/qualities\">Качества</NavLink></li>\r\n                            <li><NavLink activeClassName={style.activeMenu} to=\"/fullname\">Ф.И.О</NavLink></li>\r\n                            <li>Вторник</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport './App.css';\r\nimport DialogItem from \"./сomponents/DialogItem/DialogItem\";\r\nimport FullName from \"./сomponents/FullName/FullName\";\r\nimport Qualities from \"./сomponents/Qualities/Qualities\";\r\nimport Counter from \"./сomponents/Counter/Counter\";\r\nimport {NavLink, Route, Switch} from \"react-router-dom\";\r\nimport Menu from \"./сomponents/Menu/Menu\";\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        listNames: [\r\n            {name: \" \"}\r\n        ],\r\n        counter: 0\r\n    };\r\n\r\n    incrementCounter = () => this.setState((prevState) => ({counter: prevState.counter + 1}));\r\n\r\n    addInputName = (name) => {\r\n        let listName = [...this.state.listNames, {name: name}];\r\n        this.setState({listNames: listName});\r\n    };\r\n\r\n    render() {\r\n\r\n        let qualities = [\r\n            {quality: 'рационалист', id: 1, className: ''},\r\n            {quality: 'комуннист', id: 2, className: 'beautiful'},\r\n            {quality: 'анимешник', id: 3, className: ''},\r\n        ];\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <Route path=\"/counter\" render={() => <Counter\r\n                    addInputName={this.addInputName}\r\n                    date={this.state}\r\n                    logic={this.incrementCounter}\r\n                    list={this.state.listNames}\r\n                />}/>\r\n                <Route path=\"/fullname\" component={FullName}/>\r\n                <Route path=\"/qualities\" render={() => <Qualities qualities={qualities}/>}/>\r\n                <Route path=\"/dialog\" component={DialogItem}/>\r\n\r\n                <Menu/>\r\n\r\n                {/*<Switch>*/}\r\n                {/*    <Route path=\"/fullname\" component={FullName}/>*/}\r\n                {/*    <Route path=\"/qualities\" render={() => <Qualities qualities = {qualities} />}/>*/}\r\n                {/*    <Route path=\"/dialog\" component={DialogItem}/>*/}\r\n                {/*    <Route path=\"/counter\" render={() => <Counter*/}\r\n                {/*                                            addInputName={this.addInputName}*/}\r\n                {/*                                            date={this.state}*/}\r\n                {/*                                            logic={this.incrementCounter}*/}\r\n                {/*                                            list={this.state.listNames}*/}\r\n                {/*                                        />}/>*/}\r\n                {/*<FullName />*/}\r\n                {/*<Qualities qualities = {qualities} />*/}\r\n                {/*<DialogItem />*/}\r\n                {/*<Counter*/}\r\n                {/*    addInputName={this.addInputName}*/}\r\n                {/*    date={this.state}*/}\r\n                {/*    logic={this.incrementCounter}*/}\r\n                {/*    list={this.state.listNames}*/}\r\n                {/*/>*/}\r\n                {/*</Switch>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter>\n        <App/>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}